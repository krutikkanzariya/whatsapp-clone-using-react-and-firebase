[{"C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\App.js":"1","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\index.js":"2","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\components\\Sidebar.js":"3","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\components\\SidebarChat.js":"4","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\components\\Chat.js":"5","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\firebase.js":"6","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\Login.js":"7","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\StateProvider.js":"8","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\reducer.js":"9"},{"size":855,"mtime":1610357847470,"results":"10","hashOfConfig":"11"},{"size":404,"mtime":1610354430512,"results":"12","hashOfConfig":"11"},{"size":2185,"mtime":1610364451263,"results":"13","hashOfConfig":"11"},{"size":1488,"mtime":1610364665596,"results":"14","hashOfConfig":"11"},{"size":3646,"mtime":1610363534321,"results":"15","hashOfConfig":"11"},{"size":714,"mtime":1610352022370,"results":"16","hashOfConfig":"11"},{"size":1149,"mtime":1610356948943,"results":"17","hashOfConfig":"11"},{"size":375,"mtime":1610356812464,"results":"18","hashOfConfig":"11"},{"size":391,"mtime":1610356815066,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1uc7qy0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\App.js",["44","45"],"import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\n\nfunction App() {\n  const [state, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n        {!state?.user? (\n          <Login />\n        ):(\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar/>\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>              \n            </Switch>            \n          </Router>\n        </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\index.js",[],["46","47"],"C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\components\\Sidebar.js",["48"],"C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\components\\SidebarChat.js",["49"],"import { Avatar } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './sidebar.css'\r\nimport db from '../firebase'\r\nimport {Link, useParams} from 'react-router-dom'\r\n\r\nfunction SidebarChat({id,name,addNewChat}) {\r\n    const [seed,setSeed] = useState('');\r\n    \r\n    const createChat = () => {\r\n        const roomName=prompt(\"Please enter name for chatroom\");\r\n        if(roomName){\r\n            db.collection('rooms').add({\r\n                name:roomName,\r\n            })\r\n            //database stff\r\n        }\r\n    }\r\n\r\n    const [lastMessage,setLastMessage] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        setSeed(Math.floor(Math.random()*10000));\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection(\"messages\").orderBy('timestamp','desc').onSnapshot((snapshot)=>\r\n                setLastMessage(snapshot.docs.map((doc)=>doc.data()))\r\n            )\r\n        }\r\n    },[id])\r\n\r\n\r\n    return !addNewChat?(\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarchat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"sidebarchat__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{lastMessage[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ):(\r\n        <div className=\"sidebarchat\" onClick={createChat}>\r\n            <h2>Add Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\components\\Chat.js",["50"],"import { Avatar, IconButton } from '@material-ui/core'\r\nimport { AttachFile, InsertEmoticon, Mic, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from '../firebase';\r\nimport { useStateValue } from '../StateProvider';\r\nimport './chat.css'\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat() {\r\n    const [input,setInput] = useState('');\r\n    const [seed,setSeed] = useState('');\r\n    const {roomId} = useParams();\r\n    const [roomName,setRoomName] = useState(\"\");\r\n    const [messages,setMessages] = useState([]);\r\n    const [state,dispatch] = useStateValue();\r\n    \r\n    useEffect(()=>{\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n        \r\n        if(roomId){\r\n        db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n            setRoomName(snapshot.data().name);\r\n        });\r\n\r\n        db.collection('rooms')\r\n        .doc(roomId)\r\n        .collection('messages')\r\n        .orderBy('timestamp','asc')\r\n        .onSnapshot(snapshot=> setMessages(snapshot.docs.map(doc=>doc.data()))\r\n        );\r\n        }\r\n\r\n    },[roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"You typed >>> \", input);\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            name:state.user.displayName,\r\n            message:input,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput('');\r\n    }\r\n    const handleChange = (e) =>{\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>{new Date(\r\n                        messages[messages.length-1]?.timestamp?.toDate()\r\n                    ).toUTCString()}\r\n                    </p>\r\n\r\n                </div>\r\n                <div className=\"chat__header--right\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"chat__body\">\r\n                {messages.map((message)=>(\r\n                    <p className={`chat__message && ${message.name===state.user.displayName && \"chat__reciever\"}`}>\r\n                        <span className=\"chat__name\">\r\n                            {message.name}\r\n                        </span>\r\n                            {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n                \r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticon />\r\n                <form>\r\n                    <input type=\"text\" placeholder=\"Enter message here\" value={input} onChange={handleChange}  />\r\n                    <button type=\"submit\" onClick={sendMessage}>\r\n                        Send a Message\r\n                    </button>\r\n                </form>\r\n                <Mic />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n",["51","52"],"C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\firebase.js",[],"C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\Login.js",["53"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './login.css';\r\nimport {auth,provider} from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport {useStateValue} from './StateProvider'\r\n\r\nfunction Login() {\r\n    const [state,dispatch] = useStateValue();\r\n    const signIn = (e) => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                console.log(result.user.displayName);\r\n               dispatch({\r\n                   type:actionTypes.SET_USER,\r\n                   user:result.user,\r\n               })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n           <div className=\"login__container\">\r\n               <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;","C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\StateProvider.js",[],"C:\\Users\\DELL\\Desktop\\Learning\\Traversy\\React\\whatsapp-clone\\src\\reducer.js",[],{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":11,"column":17,"nodeType":"56","messageId":"57","endLine":11,"endColumn":25},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"54","severity":1,"message":"58","line":14,"column":18,"nodeType":"56","messageId":"57","endLine":14,"endColumn":26},{"ruleId":"54","severity":1,"message":"63","line":5,"column":15,"nodeType":"56","messageId":"57","endLine":5,"endColumn":24},{"ruleId":"54","severity":1,"message":"58","line":16,"column":18,"nodeType":"56","messageId":"57","endLine":16,"endColumn":26},{"ruleId":"59","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"54","severity":1,"message":"66","line":9,"column":12,"nodeType":"56","messageId":"57","endLine":9,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'useParams' is defined but never used.",["67"],["68"],"'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]